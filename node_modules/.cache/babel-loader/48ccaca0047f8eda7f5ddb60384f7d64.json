{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyAMmLRjAZhCCCsetx0-fSRDfu8ojucL7Y0\",\n  authDomain: \"lamp-297904.firebaseapp.com\",\n  databaseURL: \"https://lamp-297904-default-rtdb.firebaseio.com\",\n  projectId: \"lamp-297904\",\n  storageBucket: \"lamp-297904.appspot.com\",\n  messagingSenderId: \"737920972101\",\n  appId: \"1:737920972101:web:3669f88489dd242267ba2c\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const firestore = firebase.firestore();\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email\n    } = user;\n\n    try {\n      await userRef.set({\n        email,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};","map":{"version":3,"sources":["/media/500GB/www/hungree/src/services/firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","auth","firestore","generateUserDocument","user","additionalData","userRef","doc","uid","snapshot","get","exists","email","set","error","console","getUserDocument","userDocument","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,6BAFD;AAGXC,EAAAA,WAAW,EAAE,iDAHF;AAIXC,EAAAA,SAAS,EAAE,aAJA;AAKXC,EAAAA,aAAa,EAAE,yBALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AACA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAtB;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAChE,MAAI,CAACD,IAAL,EAAW;AAEX,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,IAAI,CAACI,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYR,IAAlB;;AACA,QAAI;AACA,YAAME,OAAO,CAACO,GAAR,CAAY;AACdD,QAAAA,KADc;AAEd,WAAGP;AAFW,OAAZ,CAAN;AAIH,KALD,CAKE,OAAOS,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACH;AACJ;;AACD,SAAOE,eAAe,CAACZ,IAAI,CAACI,GAAN,CAAtB;AACH,CAlBM;;AAoBP,MAAMQ,eAAe,GAAG,MAAMR,GAAN,IAAa;AACjC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACA,UAAMS,YAAY,GAAG,MAAMf,SAAS,CAACK,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AACA,WAAO;AACHF,MAAAA,GADG;AAEH,SAAGS,YAAY,CAACC,IAAb;AAFA,KAAP;AAIH,GAND,CAME,OAAOJ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH;AACJ,CAXD","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst config = {\n    apiKey: \"AIzaSyAMmLRjAZhCCCsetx0-fSRDfu8ojucL7Y0\",\n    authDomain: \"lamp-297904.firebaseapp.com\",\n    databaseURL: \"https://lamp-297904-default-rtdb.firebaseio.com\",\n    projectId: \"lamp-297904\",\n    storageBucket: \"lamp-297904.appspot.com\",\n    messagingSenderId: \"737920972101\",\n    appId: \"1:737920972101:web:3669f88489dd242267ba2c\"\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const firestore = firebase.firestore();\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n  \n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n  \n    if (!snapshot.exists) {\n        const { email } = user;\n        try {\n            await userRef.set({\n                email,\n                ...additionalData\n            });\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n    return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n    if (!uid) return null;\n    try {\n        const userDocument = await firestore.doc(`users/${uid}`).get();  \n        return {\n            uid,\n            ...userDocument.data()\n        };\n    } catch (error) {\n        console.error(\"Error fetching user\", error);\n    }\n};"]},"metadata":{},"sourceType":"module"}