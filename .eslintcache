[{"/media/500GB/www/hungree/src/index.js":"1","/media/500GB/www/hungree/src/App.js":"2","/media/500GB/www/hungree/src/reportWebVitals.js":"3","/media/500GB/www/hungree/src/ServiceWorker.js":"4","/media/500GB/www/hungree/src/Firebase.js":"5","/media/500GB/www/hungree/src/pages/Login.js":"6","/media/500GB/www/hungree/src/services/firebase.js":"7","/media/500GB/www/hungree/src/pages/Register.js":"8","/media/500GB/www/hungree/src/pages/Dashboard.js":"9","/media/500GB/www/hungree/src/pages/category/index.js":"10","/media/500GB/www/hungree/src/pages/product/index.js":"11","/media/500GB/www/hungree/src/helpers/UserProvider.js":"12"},{"size":602,"mtime":1609219305475,"results":"13","hashOfConfig":"14"},{"size":744,"mtime":1609290730298,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609175477540,"results":"16","hashOfConfig":"14"},{"size":0,"mtime":1609185252861,"results":"17","hashOfConfig":"18"},{"size":1619,"mtime":1609187632994,"results":"19","hashOfConfig":"14"},{"size":3040,"mtime":1609288130034,"results":"20","hashOfConfig":"14"},{"size":567,"mtime":1609262116621,"results":"21","hashOfConfig":"14"},{"size":3735,"mtime":1609291079221,"results":"22","hashOfConfig":"14"},{"size":6483,"mtime":1609289292294,"results":"23","hashOfConfig":"14"},{"size":17857,"mtime":1609282822635,"results":"24","hashOfConfig":"14"},{"size":23569,"mtime":1609285454770,"results":"25","hashOfConfig":"14"},{"size":570,"mtime":1609287573587,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1af9948",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kpbw5w",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/500GB/www/hungree/src/index.js",[],["56","57"],"/media/500GB/www/hungree/src/App.js",[],"/media/500GB/www/hungree/src/reportWebVitals.js",[],"/media/500GB/www/hungree/src/ServiceWorker.js",[],"/media/500GB/www/hungree/src/Firebase.js",["58"],"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { functions } from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAMmLRjAZhCCCsetx0-fSRDfu8ojucL7Y0\",\n    authDomain: \"lamp-297904.firebaseapp.com\",\n    databaseURL: \"https://lamp-297904-default-rtdb.firebaseio.com\",\n    projectId: \"lamp-297904\",\n    storageBucket: \"lamp-297904.appspot.com\",\n    messagingSenderId: \"737920972101\",\n    appId: \"1:737920972101:web:3669f88489dd242267ba2c\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n    auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n  \n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n  \n    if (!snapshot.exists) {\n      const { email, displayName, photoURL } = user;\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          photoURL,\n          ...additionalData\n        });\n      } catch (error) {\n        console.error(\"Error creating user document\", error);\n      }\n    }\n    return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n    if (!uid) return null;\n    try {\n      const userDocument = await firestore.doc(`users/${uid}`).get();\n  \n      return {\n        uid,\n        ...userDocument.data()\n      };\n    } catch (error) {\n        console.error(\"Error fetching user\", error);\n    }\n}",["59","60"],"/media/500GB/www/hungree/src/pages/Login.js",[],"/media/500GB/www/hungree/src/services/firebase.js",[],"/media/500GB/www/hungree/src/pages/Register.js",["61"],"/media/500GB/www/hungree/src/pages/Dashboard.js",[],"/media/500GB/www/hungree/src/pages/category/index.js",["62","63","64","65"],"import React, { useState, useEffect } from 'react';\nimport { auth, firestore } from \"../../services/firebase\";\nimport firebase from \"firebase/app\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Category() {\n    const [category, setCategory] = useState([]);\n    const [dropdown, setDropdown] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [create, setCreate] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [id, setId] = useState(\"\");\n\n    useEffect(() => {\n        if (navigator.onLine) {\n            console.log('online');\n            firestore.collection(\"category\").orderBy(\"datetime\", \"desc\").get().then(snapshot => {\n                setCategory(snapshot.docs.map(doc => {\n                    return {\n                        id: doc.id,\n                        name: doc.data().name,\n                        datetime: doc.data().datetime\n                    }\n                }));\n            });        \n        }\n\n        if (localStorage.key('category') !== null && navigator.onLine) {\n            console.log('update storage');\n            localStorage.setItem('category', JSON.stringify(category));\n        }\n\n        if (localStorage.key('category') === null && navigator.onLine) {\n            console.log('crate storage');\n            localStorage.setItem('category', JSON.stringify(category));\n        }\n\n        if (!navigator.onLine && localStorage.key('category') !== null) {\n            console.log('offline');\n            const local = localStorage.getItem('category');\n            const parse = JSON.parse(local);\n            setCategory(parse);\n        }\n    }, []);\n\n    const onSubmit = async () => {\n        await firestore.collection('category').add({\n            name: name,\n            datetime: firebase.firestore.FieldValue.serverTimestamp()\n        }).then(() => {\n            setName(\"\");\n            setModal(false);\n            setCreate(false);\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    const onUpdate = async () => {\n        console.log(id, name);\n        await firestore.collection('category').doc(id).update({\n            name: name\n        }).then(() => {\n            setId(\"\");\n            setName(\"\");\n            setModal(false);\n            setUpdate(false);\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    const onCreate = () => {\n        setModal(!modal);\n        setCreate(!create);\n    }\n\n    const onShow = (value) => {\n        setModal(!modal);\n        setShow(!show);\n        setName(value.name);\n    }\n\n\n    const onEdit = (value) => {\n        setModal(!modal);\n        setUpdate(!update);\n        setName(value.name);\n        setId(value.id);\n    }\n\n    const onDelete = async (id) => {\n        await firestore.collection('category').doc(id).delete()\n        .then(res => {\n            console.log(res);\n        });\n    }\n\n    const onClose = () => {\n        if (modal && create) {\n            setModal(!modal);\n            setCreate(!create);\n        }\n        if (modal && show) {\n            setModal(!modal);\n            setShow(!show);\n            setName(\"\");\n        }\n        if (modal && update) {\n            setModal(!modal);\n            setUpdate(!update);\n            setId(\"\");\n            setName(\"\");\n        }\n    }\n\n    const onLogout = () => {\n        auth().signOut()\n        .then(() => {\n            return <Redirect to=\"/login\" />\n        })\n        .catch(error => {\n            console.error(error);\n        });\n    }\n\n    return (\n        <div>\n            <nav class=\"bg-gray-800\">\n                <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                    <div class=\"flex items-center justify-between h-16\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <img class=\"h-8 w-8\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\" alt=\"Workflow\" />\n                            </div>\n                            <div class=\"hidden md:block\">\n                                <div class=\"ml-10 flex items-baseline space-x-4\">\n                                    <a href=\"/\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Dashboard</a>\n                                    <a href=\"/category\" class=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">Category</a>\n                                    <a href=\"/product\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Product</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"hidden md:block\">\n                            <div class=\"ml-4 flex items-center md:ml-6\">\n                                <button class=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                    <span class=\"sr-only\">View notifications</span>\n                                    <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                                    </svg>\n                                </button>\n\n                                <div class=\"ml-3 relative\">\n                                    <div>\n                                        <button onClick={() => setDropdown(!dropdown)} class=\"max-w-xs bg-gray-800 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\" id=\"user-menu\" aria-haspopup=\"true\">\n                                            <span class=\"sr-only\">Open user menu</span>\n                                            <img class=\"h-8 w-8 rounded-full\" src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\" />\n                                        </button>\n                                    </div>\n                                    {\n                                        dropdown &&\n                                        (\n                                            <div class=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">        \n                                                <a href=\"/\" c class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\" role=\"menuitem\" onClick={onLogout}>Sign out</a>\n                                            </div>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n\n            <header class=\"bg-white shadow\">\n                <div class=\"max-w-12xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                    <h1 class=\"text-3xl font-bold leading-tight text-gray-900\">\n                        Category\n\t\t\t        </h1>\n                </div>\n            </header>\n            <main>\n                <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                    <div class=\"px-4 py-6 sm:px-0\">\n                        <div class=\"lg:flex lg:items-center lg:justify-between py-2\">\n                            <div class=\"flex-1 min-w-0\">\n                            </div>\n                            <div class=\"mt-5 flex lg:mt-0 lg:ml-4\">\n                                <span class=\"sm:ml-3\">\n                                    <button onClick={onCreate} type=\"button\" class=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                        <svg class=\"-ml-1 mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                        <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                        Create\n                                    </button>\n                                </span>\n                            </div>\n                        </div>\n                        {\n                            modal &&\n                            (\n                                <div class=\"fixed z-10 inset-0 overflow-y-auto\">\n                                    <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                                        <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                                            <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                                        </div>\n                                        <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                                        <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                                            <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                                                <div class=\"sm:flex sm:items-start\">\n                                                    {(create || update) && (<input id=\"name\" name=\"name\" type=\"text\" required class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />)}\n                                                    {show && (<input id=\"name\" disabled name=\"name\" type=\"text\" required class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Name\" value={name} />)}\n                                                    {update && (<input id=\"id\" disabled name=\"id\" type=\"hidden\" required value={id} />)}\n                                                </div>\n                                            </div>\n                                            <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                                                {create && (<button onClick={onSubmit} type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-white-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white-500 sm:ml-3 sm:w-auto sm:text-sm\">Submit</button>)}\n                                                {update && (<button onClick={onUpdate} type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-white-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white-500 sm:ml-3 sm:w-auto sm:text-sm\">Update</button>)}\n                                                <button onClick={onClose} type=\"button\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">Cancel</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                        <div class=\"border-4 border-gray-200 rounded-lg\">\n                            <div class=\"flex flex-col\">\n                                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                            <table class=\"min-w-full divide-y divide-gray-200\">\n                                                <thead class=\"bg-gray-50\">\n                                                    <tr>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            No\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Name\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Datetime\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody class=\"bg-white divide-y divide-gray-200\">\n                                                    {\n                                                        category.map((value, index) => (\n                                                            <tr>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{index + 1}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{value.name}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{value.datetime !== null && (navigator.onLine ? value.datetime.toDate().toString() : Date(value.datetime))}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div>\n                                                                        <a onClick={() => {onShow(value)}} class=\"text-blue-600 hover:text-blue-900 cursor-pointer text-xs\">Show</a>\n                                                                    </div>\n                                                                    <div>\n                                                                        <a onClick={() => {onEdit(value)}} class=\"text-yellow-600 hover:text-yellow-900 cursor-pointer text-xs\">Edit</a>\n                                                                    </div>\n                                                                    <div>\n                                                                        <a onClick={() => {onDelete(value.id)}} class=\"text-red-600 hover:text-red-900 cursor-pointer text-xs\">Delete</a>\n                                                                    </div>\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default Category;","/media/500GB/www/hungree/src/pages/product/index.js",["66","67","68","69"],"import React, { useState, useEffect } from 'react';\nimport { auth, firestore } from \"../../services/firebase\";\nimport firebase from \"firebase/app\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Product() {\n\tconst [product, setProduct] = useState([]);\n\tconst [categorys, setCategorys] = useState([]);\n    const [dropdown, setDropdown] = useState(false);\n    const [modal, setModal] = useState(false);\n    const [create, setCreate] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState(\"\");\n\tconst [id, setId] = useState(\"\");\n\tconst [price, setPrice] = useState(\"\");\n\tconst [quantity, setQuantity] = useState(\"\");\n\tconst [category, setCategory] = useState(\"\");\n\n    useEffect(() => {\n        if (navigator.onLine) {\n            console.log('online');\n            firestore.collection('product').orderBy('datetime', 'desc').onSnapshot(snapshot => {\n                setProduct(snapshot.docs.map(doc => {\n                    return {\n                        id: doc.id,\n                        category: doc.data().category,\n                        name: doc.data().name,\n                        price: doc.data().price,\n                        quantity: doc.data().quantity,\n                        datetime: doc.data().datetime\n                    }\n                }));\n            });\n            firestore.collection('category').onSnapshot(snapshot => {\n                setCategorys(snapshot.docs.map(doc => {\n                    return {\n                        id: doc.id,\n                        name: doc.data().name\n                    }\n                }));\n            });      \n        }\n\n        if (localStorage.key('product') !== null && navigator.onLine) {\n            console.log('update storage');\n            localStorage.setItem('product', JSON.stringify(product));\n        }\n\n        if (localStorage.key('product') === null && navigator.onLine) {\n            console.log('crate storage');\n            localStorage.setItem('product', JSON.stringify(product));\n        }\n\n        if (!navigator.onLine && localStorage.key('product') !== null) {\n            console.log('offline');\n            const local = localStorage.getItem('product');\n            const parse = JSON.parse(local);\n            setProduct(parse);\n        }\n    }, []);\n\n    const onSubmit = async () => {\n        await firestore.collection('product').add({\n\t\t\tcategory: category,\n\t\t\tname: name,\n\t\t\tprice: price,\n\t\t\tquantity: quantity,\n            datetime: firebase.firestore.FieldValue.serverTimestamp()\n        }).then(() => {\n\t\t\tsetCategory(\"\");\n\t\t\tsetName(\"\");\n\t\t\tsetPrice(\"\");\n\t\t\tsetQuantity(\"\");\n\t\t\tsetModal(false);\n\t\t\tsetCreate(false);\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    const onUpdate = async () => {\n        await firestore.collection('product').doc(id).update({\n\t\t\tcategory: category,\n\t\t\tname: name,\n\t\t\tprice: price,\n\t\t\tquantity: quantity,\n        }).then(() => {\n            setId(\"\");\n            setName(\"\");\n            setModal(false);\n            setUpdate(false);\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    const onCreate = () => {\n        setModal(!modal);\n        setCreate(!create);\n    }\n\n    const onShow = (value) => {\n        setModal(!modal);\n\t\tsetShow(!show);\n\t\tsetCategory(value.category);\n\t\tsetName(value.name);\n\t\tsetPrice(value.price);\n\t\tsetQuantity(value.quantity);\n    }\n\n\n    const onEdit = (value) => {\n        setModal(!modal);\n        setUpdate(!update);\n\t\tsetId(value.id);\n\t\tsetCategory(value.category);\n\t\tsetName(value.name);\n\t\tsetPrice(value.price);\n\t\tsetQuantity(value.quantity);\n    }\n\n    const onDelete = async (id) => {\n        await firestore.collection('product').doc(id).delete()\n        .then(res => {\n            console.log(res);\n        });\n    }\n\n    const onClose = () => {\n        if (modal && create) {\n            setModal(!modal);\n            setCreate(!create);\n        }\n        if (modal && show) {\n            setModal(!modal);\n            setShow(!show);\n\t\t\tsetCategory(\"\");\n\t\t\tsetName(\"\");\n\t\t\tsetPrice(\"\");\n\t\t\tsetQuantity(\"\");\n        }\n        if (modal && update) {\n            setModal(!modal);\n            setUpdate(!update);\n            setId(\"\");\n\t\t\tsetCategory(\"\");\n\t\t\tsetName(\"\");\n\t\t\tsetPrice(\"\");\n\t\t\tsetQuantity(\"\");\n        }\n    }\n\n    const onLogout = () => {\n        auth().signOut()\n        .then(() => {\n            return <Redirect to=\"/login\" />\n        })\n        .catch(error => {\n            console.error(error);\n        });\n    }\n\n    return (\n        <div>\n            <nav class=\"bg-gray-800\">\n                <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                    <div class=\"flex items-center justify-between h-16\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0\">\n                                <img class=\"h-8 w-8\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\" alt=\"Workflow\" />\n                            </div>\n                            <div class=\"hidden md:block\">\n                                <div class=\"ml-10 flex items-baseline space-x-4\">\n                                    <a href=\"/\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Dashboard</a>\n                                    <a href=\"/category\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Category</a>\n                                    <a href=\"/product\" class=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">Product</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"hidden md:block\">\n                            <div class=\"ml-4 flex items-center md:ml-6\">\n                                <button class=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                    <span class=\"sr-only\">View notifications</span>\n                                    <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                                    </svg>\n                                </button>\n\n                                <div class=\"ml-3 relative\">\n                                    <div>\n                                        <button onClick={() => setDropdown(!dropdown)} class=\"max-w-xs bg-gray-800 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\" id=\"user-menu\" aria-haspopup=\"true\">\n                                            <span class=\"sr-only\">Open user menu</span>\n                                            <img class=\"h-8 w-8 rounded-full\" src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\" />\n                                        </button>\n                                    </div>\n                                    {\n                                        dropdown &&\n                                        (\n                                            <div class=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">        \n                                                <a href=\"/\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer\" role=\"menuitem\" onClick={onLogout}>Sign out</a>\n                                            </div>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n\n            <header class=\"bg-white shadow\">\n                <div class=\"max-w-12xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                    <h1 class=\"text-3xl font-bold leading-tight text-gray-900\">\n                        Product\n\t\t\t        </h1>\n                </div>\n            </header>\n            <main>\n                <div class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                    <div class=\"px-4 py-6 sm:px-0\">\n                        <div class=\"lg:flex lg:items-center lg:justify-between py-2\">\n                            <div class=\"flex-1 min-w-0\">\n                            </div>\n                            <div class=\"mt-5 flex lg:mt-0 lg:ml-4\">\n                                <span class=\"sm:ml-3\">\n                                    <button onClick={onCreate} type=\"button\" class=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                        <svg class=\"-ml-1 mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                        <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                        Create\n                                    </button>\n                                </span>\n                            </div>\n                        </div>\n                        {\n                            modal &&\n                            (\n                                <div class=\"fixed z-10 inset-0 overflow-y-auto\">\n                                    <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                                        <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                                            <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                                        </div>\n                                        <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                                        <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                                            <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                                                <div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(create || update) && \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select id=\"category\" name=\"category\" onChange={(e) => setCategory(e.target.value)} class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white shadow-sm focus:outline-none sm:text-sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>Category...</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcategorys.map(value => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(update && value.id === category) ? <option value={value.id} selected>{value.name}</option> : <option value={value.id}>{value.name}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" required class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"price\" name=\"price\" type=\"text\" required class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Price\" value={price} onChange={(e) => setPrice(e.target.value)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"quantity\" name=\"quantity\" type=\"number\" required class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Quantity\" value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshow && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{categorys.map(item => (item.id === category) && (<input id=\"category\" name=\"category\" type=\"text\" disabled class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Category\" value={item.name} />))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" disabled class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Name\" value={name} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"price\" name=\"price\" type=\"text\" disabled class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Price\" value={price} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"quantity\" name=\"quantity\" type=\"number\" disabled class=\"appearance-none rounded-5 relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Quantity\" value={quantity} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n                                                    {update && (<input id=\"id\" disabled name=\"id\" type=\"hidden\" required value={id} />)}\n                                                </div>\n                                            </div>\n                                            <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                                                {create && (<button onClick={onSubmit} type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-white-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white-500 sm:ml-3 sm:w-auto sm:text-sm\">Submit</button>)}\n                                                {update && (<button onClick={onUpdate} type=\"button\" class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-white-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white-500 sm:ml-3 sm:w-auto sm:text-sm\">Update</button>)}\n                                                <button onClick={onClose} type=\"button\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">Cancel</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                        <div class=\"border-4 border-gray-200 rounded-lg\">\n                            <div class=\"flex flex-col\">\n                                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                            <table class=\"min-w-full divide-y divide-gray-200\">\n                                                <thead class=\"bg-gray-50\">\n                                                    <tr>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            No\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Category\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Name\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Price\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Quantity\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Datetime\n                                                        </th>\n                                                        <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody class=\"bg-white divide-y divide-gray-200\">\n                                                    {\n                                                        product.map((value, index) => (\n                                                            <tr>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{index + 1}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{categorys.map(item => (item.id === value.category) && (<div class=\"text-sm text-gray-900\">{item.name}</div>))}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{value.name}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{value.price}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{value.quantity}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div class=\"text-sm text-gray-900\">{value.datetime !== null && value.datetime.toDate().toString()}</div>\n                                                                </td>\n                                                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                                                    <div>\n                                                                        <a onClick={() => {onShow(value)}} class=\"text-blue-600 hover:text-blue-900 cursor-pointer text-xs\">Show</a>\n                                                                    </div>\n                                                                    <div>\n                                                                        <a onClick={() => {onEdit(value)}} class=\"text-yellow-600 hover:text-yellow-900 cursor-pointer text-xs\">Edit</a>\n                                                                    </div>\n                                                                    <div>\n                                                                        <a onClick={() => {onDelete(value.id)}} class=\"text-red-600 hover:text-red-900 cursor-pointer text-xs\">Delete</a>\n                                                                    </div>\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    }\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default Product;","/media/500GB/www/hungree/src/helpers/UserProvider.js",["70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":19},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","replacedBy":"82"},{"ruleId":"77","severity":1,"message":"83","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":46,"column":8,"nodeType":"86","endLine":46,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":265,"column":73,"nodeType":"90","endLine":265,"endColumn":173},{"ruleId":"88","severity":1,"message":"89","line":268,"column":73,"nodeType":"90","endLine":268,"endColumn":177},{"ruleId":"88","severity":1,"message":"89","line":271,"column":73,"nodeType":"90","endLine":271,"endColumn":176},{"ruleId":"84","severity":1,"message":"91","line":61,"column":8,"nodeType":"86","endLine":61,"endColumn":10,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"89","line":360,"column":73,"nodeType":"90","endLine":360,"endColumn":173},{"ruleId":"88","severity":1,"message":"89","line":363,"column":73,"nodeType":"90","endLine":363,"endColumn":177},{"ruleId":"88","severity":1,"message":"89","line":366,"column":73,"nodeType":"90","endLine":366,"endColumn":176},{"ruleId":"77","severity":1,"message":"93","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"94","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":36},{"ruleId":"77","severity":1,"message":"95","line":7,"column":18,"nodeType":"79","messageId":"80","endLine":7,"endColumn":25},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'functions' is defined but never used.","Identifier","unusedVar",["96"],["97"],"'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["98"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["99"],"'Component' is defined but never used.","'generateUserDocument' is defined but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [category]",{"range":"104","text":"105"},"Update the dependencies array to be: [product]",{"range":"106","text":"107"},[1737,1739],"[category]",[2354,2356],"[product]"]